{"ast":null,"code":"var _jsxFileName = \"C:\\\\web_development\\\\React\\\\React-Start\\\\Renderring-List-And-Conditional-Content\\\\Expense-Tracker\\\\src\\\\components\\\\NewExpense\\\\NewExpense.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./newExpense.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewExpense(props) {\n  _s();\n  const [showButton, setShowButton] = useState(true); // to manage if we want to show button , or the form\n  const saveExpenseDataHandler = enteredExpenseData => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: uuid()\n    };\n    props.onAddExpense(expenseData);\n  };\n\n  // for the close button of the form , if that button is click then the add expense button has to be displayed, i.e form has to be closed\n  const onShowButtonHandler = state => {\n    setShowButton(state);\n  };\n\n  // for the add expense button , if that button is closed ,then the from has to be opened\n  const addExpenseHandler = event => {\n    setShowButton(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: showButton ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addExpenseHandler,\n      children: \"Add Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onSaveExpenseData: saveExpenseDataHandler,\n      onShowButton: onShowButtonHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(NewExpense, \"htdk046snjIlp+1hLii+8rg0vFc=\");\n_c = NewExpense;\nvar _c;\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"names":["React","useState","v4","uuid","ExpenseForm","jsxDEV","_jsxDEV","NewExpense","props","_s","showButton","setShowButton","saveExpenseDataHandler","enteredExpenseData","expenseData","id","onAddExpense","onShowButtonHandler","state","addExpenseHandler","event","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSaveExpenseData","onShowButton","_c","$RefreshReg$"],"sources":["C:/web_development/React/React-Start/Renderring-List-And-Conditional-Content/Expense-Tracker/src/components/NewExpense/NewExpense.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./newExpense.css\";\r\n\r\nexport default function NewExpense(props) {\r\n  const [showButton, setShowButton] = useState(true); // to manage if we want to show button , or the form\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: uuid(),\r\n    };\r\n\r\n    props.onAddExpense(expenseData);\r\n  };\r\n\r\n  // for the close button of the form , if that button is click then the add expense button has to be displayed, i.e form has to be closed\r\n  const onShowButtonHandler = (state) => {\r\n    setShowButton(state);\r\n  };\r\n\r\n  // for the add expense button , if that button is closed ,then the from has to be opened\r\n  const addExpenseHandler = (event) => {\r\n    setShowButton(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {/* onSaveExpenseData is used to get the data from the child component, in the childComponent it will be accessed as props.onSaveExpenseData */}\r\n\r\n      {/* if showButton is true, we will display the button , else we will display the form */}\r\n      {showButton ? (\r\n        <button onClick={addExpenseHandler}>Add Expense</button>\r\n      ) : (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onShowButton={onShowButtonHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,EAAE,IAAIC,IAAI,QAAQ,MAAM;AACjC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,UAAUA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACpD,MAAMW,sBAAsB,GAAIC,kBAAkB,IAAK;IACrD,MAAMC,WAAW,GAAG;MAClB,GAAGD,kBAAkB;MACrBE,EAAE,EAAEZ,IAAI,CAAC;IACX,CAAC;IAEDK,KAAK,CAACQ,YAAY,CAACF,WAAW,CAAC;EACjC,CAAC;;EAED;EACA,MAAMG,mBAAmB,GAAIC,KAAK,IAAK;IACrCP,aAAa,CAACO,KAAK,CAAC;EACtB,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnCT,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACEL,OAAA;IAAKe,SAAS,EAAC,aAAa;IAAAC,QAAA,EAIzBZ,UAAU,gBACTJ,OAAA;MAAQiB,OAAO,EAAEJ,iBAAkB;MAAAG,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAExDrB,OAAA,CAACF,WAAW;MACVwB,iBAAiB,EAAEhB,sBAAuB;MAC1CiB,YAAY,EAAEZ;IAAoB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClB,EAAA,CApCuBF,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}