{"ast":null,"code":"var _jsxFileName = \"C:\\\\web_development\\\\React\\\\React-Start\\\\Renderring-List-And-Conditional-Content\\\\Expense-Tracker\\\\src\\\\components\\\\Expenses\\\\Expenses.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport ExpensesFilter from \"../ExpenseFilter/ExpensesFilter\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport \"./Expenses.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Expenses({\n  expenses\n}) {\n  _s();\n  const [filterYear, setFilterYear] = useState(\"2020\");\n  const saveYearHandler = year => {\n    setFilterYear(year);\n  };\n  const filteredArray = expenses.filter(expense => expense.date.getFullYear() == filterYear);\n  let expenseContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    class: \"no-expense-message\",\n    children: \"No Expense found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 24\n  }, this);\n\n  // conditional rendering\n  if (filteredArray.length > 0) {\n    expenseContent = filteredArray.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selectedYear: filterYear,\n      onSaveYear: saveYearHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpensesChart, {\n      expenses: filteredArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), expenseContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Expenses, \"6isFWgJBMljtaGD2YFjmwn31loo=\");\n_c = Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["useState","ExpensesFilter","ExpenseItem","ExpensesChart","jsxDEV","_jsxDEV","Expenses","expenses","_s","filterYear","setFilterYear","saveYearHandler","year","filteredArray","filter","expense","date","getFullYear","expenseContent","class","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","title","amount","id","className","selectedYear","onSaveYear","_c","$RefreshReg$"],"sources":["C:/web_development/React/React-Start/Renderring-List-And-Conditional-Content/Expense-Tracker/src/components/Expenses/Expenses.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport ExpensesFilter from \"../ExpenseFilter/ExpensesFilter\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport \"./Expenses.css\";\r\n\r\nexport default function Expenses({ expenses }) {\r\n  const [filterYear, setFilterYear] = useState(\"2020\");\r\n\r\n  const saveYearHandler = (year) => {\r\n    setFilterYear(year);\r\n  };\r\n\r\n  const filteredArray = expenses.filter(\r\n    (expense) => expense.date.getFullYear() == filterYear\r\n  );\r\n\r\n  let expenseContent = <p class=\"no-expense-message\">No Expense found</p>;\r\n\r\n  // conditional rendering\r\n  if (filteredArray.length > 0) {\r\n    expenseContent = filteredArray.map((expense) => (\r\n      <ExpenseItem\r\n        title={expense.title}\r\n        amount={expense.amount}\r\n        date={expense.date}\r\n        key={expense.id}\r\n      />\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <div className=\"expenses\">\r\n      {/* doing two way binding    */}\r\n      <ExpensesFilter selectedYear={filterYear} onSaveYear={saveYearHandler} />\r\n\r\n      {/* dynamically render the expenses with the help of array.map() , after the looping\r\n      we give get an array consisting of all the custom component tags like [tag1, tag2] and the react will\r\n      render it */}\r\n\r\n      <ExpensesChart expenses={filteredArray} />\r\n\r\n      {expenseContent}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,eAAe,SAASC,QAAQA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;EAEpD,MAAMW,eAAe,GAAIC,IAAI,IAAK;IAChCF,aAAa,CAACE,IAAI,CAAC;EACrB,CAAC;EAED,MAAMC,aAAa,GAAGN,QAAQ,CAACO,MAAM,CAClCC,OAAO,IAAKA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,IAAIR,UAC7C,CAAC;EAED,IAAIS,cAAc,gBAAGb,OAAA;IAAGc,KAAK,EAAC,oBAAoB;IAAAC,QAAA,EAAC;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;;EAEvE;EACA,IAAIX,aAAa,CAACY,MAAM,GAAG,CAAC,EAAE;IAC5BP,cAAc,GAAGL,aAAa,CAACa,GAAG,CAAEX,OAAO,iBACzCV,OAAA,CAACH,WAAW;MACVyB,KAAK,EAAEZ,OAAO,CAACY,KAAM;MACrBC,MAAM,EAAEb,OAAO,CAACa,MAAO;MACvBZ,IAAI,EAAED,OAAO,CAACC;IAAK,GACdD,OAAO,CAACc,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CACF,CAAC;EACJ;EAEA,oBACEnB,OAAA;IAAKyB,SAAS,EAAC,UAAU;IAAAV,QAAA,gBAEvBf,OAAA,CAACJ,cAAc;MAAC8B,YAAY,EAAEtB,UAAW;MAACuB,UAAU,EAAErB;IAAgB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAMzEnB,OAAA,CAACF,aAAa;MAACI,QAAQ,EAAEM;IAAc;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEzCN,cAAc;EAAA;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV;AAAChB,EAAA,CAvCuBF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}