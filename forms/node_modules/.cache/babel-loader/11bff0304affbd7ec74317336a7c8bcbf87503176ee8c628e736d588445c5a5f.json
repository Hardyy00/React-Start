{"ast":null,"code":"var _jsxFileName = \"C:\\\\web_development\\\\React\\\\forms\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    valueBlurHandler: nameBlurHandler\n  } = useInput();\n  // const [enteredName, setEnteredName] = useState(\"\");\n  // const [nameFieldTouched, setNameFieldTouched] = useState(false);\n\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [emailFieldTouched, setEmailFieldTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const inputIsInvalid = !enteredNameIsValid && nameFieldTouched;\n  const enteredEmailIsValid = enteredEmail.includes(\"@\");\n  const inputEmailIsInvalid = !enteredEmailIsValid && emailFieldTouched;\n  const formIsValid = enteredNameIsValid && enteredEmailIsValid;\n  if (nameFieldTouched === false && enteredName.trim() !== \"\") setNameFieldTouched(true);\n  if (emailFieldTouched === false && enteredEmail.trim() !== \"\") setEmailFieldTouched(true);\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const nameInputBlurHandler = event => {\n    setNameFieldTouched(true);\n  };\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n  const emailBlurhander = event => {\n    setEmailFieldTouched(true);\n  };\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    setNameFieldTouched(true);\n    setEmailFieldTouched(true);\n    if (enteredName.trim() === \"\" || !enteredEmail.includes(\"@\")) return;\n    setEnteredName(\"\");\n    setEnteredEmail(\"\");\n    setNameFieldTouched(false);\n    setEmailFieldTouched(false);\n  };\n  const nameInputClasses = `form-control ${inputIsInvalid ? \"invalid\" : \"\"}`;\n  const emailInputClasses = `form-control ${inputEmailIsInvalid ? \"invalid\" : \"\"}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        value: enteredName,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), inputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Name must not be empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        value: enteredEmail,\n        onBlur: emailBlurhander\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), inputEmailIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Email must include '@'\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        onClick: () => {\n          console.log(\"clicked\");\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"DGg1W0Y+uz7epz4VaaeUnmzpqu4=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","value","enteredName","hasError","nameInputHasError","valueChangeHandler","nameChangeHandler","valueBlurHandler","nameBlurHandler","enteredEmail","setEnteredEmail","emailFieldTouched","setEmailFieldTouched","enteredNameIsValid","trim","inputIsInvalid","nameFieldTouched","enteredEmailIsValid","includes","inputEmailIsInvalid","formIsValid","setNameFieldTouched","nameInputChangeHandler","event","setEnteredName","target","nameInputBlurHandler","emailInputChangeHandler","emailBlurhander","formSubmitHandler","preventDefault","nameInputClasses","emailInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","onClick","console","log","_c","$RefreshReg$"],"sources":["C:/web_development/React/forms/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    valueBlurHandler: nameBlurHandler,\n  } = useInput();\n  // const [enteredName, setEnteredName] = useState(\"\");\n  // const [nameFieldTouched, setNameFieldTouched] = useState(false);\n\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [emailFieldTouched, setEmailFieldTouched] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const inputIsInvalid = !enteredNameIsValid && nameFieldTouched;\n  const enteredEmailIsValid = enteredEmail.includes(\"@\");\n  const inputEmailIsInvalid = !enteredEmailIsValid && emailFieldTouched;\n  const formIsValid = enteredNameIsValid && enteredEmailIsValid;\n\n  if (nameFieldTouched === false && enteredName.trim() !== \"\")\n    setNameFieldTouched(true);\n\n  if (emailFieldTouched === false && enteredEmail.trim() !== \"\")\n    setEmailFieldTouched(true);\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = (event) => {\n    setNameFieldTouched(true);\n  };\n\n  const emailInputChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const emailBlurhander = (event) => {\n    setEmailFieldTouched(true);\n  };\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    setNameFieldTouched(true);\n    setEmailFieldTouched(true);\n\n    if (enteredName.trim() === \"\" || !enteredEmail.includes(\"@\")) return;\n\n    setEnteredName(\"\");\n    setEnteredEmail(\"\");\n    setNameFieldTouched(false);\n    setEmailFieldTouched(false);\n  };\n\n  const nameInputClasses = `form-control ${inputIsInvalid ? \"invalid\" : \"\"}`;\n  const emailInputClasses = `form-control ${\n    inputEmailIsInvalid ? \"invalid\" : \"\"\n  }`;\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          value={enteredName}\n          onBlur={nameInputBlurHandler}\n        />\n      </div>\n\n      {inputIsInvalid && <p className=\"error-text\">Name must not be empty</p>}\n\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">Your Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailInputChangeHandler}\n          value={enteredEmail}\n          onBlur={emailBlurhander}\n        />\n      </div>\n\n      {inputEmailIsInvalid && (\n        <p className=\"error-text\">Email must include '@'</p>\n      )}\n\n      <div className=\"form-actions\">\n        <button\n          disabled={!formIsValid}\n          onClick={() => {\n            console.log(\"clicked\");\n          }}\n        >\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,QAAQ,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAM;IACJC,KAAK,EAAEC,WAAW;IAClBC,QAAQ,EAAEC,iBAAiB;IAC3BC,kBAAkB,EAAEC,iBAAiB;IACrCC,gBAAgB,EAAEC;EACpB,CAAC,GAAGb,QAAQ,CAAC,CAAC;EACd;EACA;;EAEA,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAMmB,kBAAkB,GAAGX,WAAW,CAACY,IAAI,CAAC,CAAC,KAAK,EAAE;EACpD,MAAMC,cAAc,GAAG,CAACF,kBAAkB,IAAIG,gBAAgB;EAC9D,MAAMC,mBAAmB,GAAGR,YAAY,CAACS,QAAQ,CAAC,GAAG,CAAC;EACtD,MAAMC,mBAAmB,GAAG,CAACF,mBAAmB,IAAIN,iBAAiB;EACrE,MAAMS,WAAW,GAAGP,kBAAkB,IAAII,mBAAmB;EAE7D,IAAID,gBAAgB,KAAK,KAAK,IAAId,WAAW,CAACY,IAAI,CAAC,CAAC,KAAK,EAAE,EACzDO,mBAAmB,CAAC,IAAI,CAAC;EAE3B,IAAIV,iBAAiB,KAAK,KAAK,IAAIF,YAAY,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAC3DF,oBAAoB,CAAC,IAAI,CAAC;EAE5B,MAAMU,sBAAsB,GAAIC,KAAK,IAAK;IACxCC,cAAc,CAACD,KAAK,CAACE,MAAM,CAACxB,KAAK,CAAC;EACpC,CAAC;EAED,MAAMyB,oBAAoB,GAAIH,KAAK,IAAK;IACtCF,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,MAAMM,uBAAuB,GAAIJ,KAAK,IAAK;IACzCb,eAAe,CAACa,KAAK,CAACE,MAAM,CAACxB,KAAK,CAAC;EACrC,CAAC;EAED,MAAM2B,eAAe,GAAIL,KAAK,IAAK;IACjCX,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMiB,iBAAiB,GAAIN,KAAK,IAAK;IACnCA,KAAK,CAACO,cAAc,CAAC,CAAC;IACtBT,mBAAmB,CAAC,IAAI,CAAC;IACzBT,oBAAoB,CAAC,IAAI,CAAC;IAE1B,IAAIV,WAAW,CAACY,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,CAACL,YAAY,CAACS,QAAQ,CAAC,GAAG,CAAC,EAAE;IAE9DM,cAAc,CAAC,EAAE,CAAC;IAClBd,eAAe,CAAC,EAAE,CAAC;IACnBW,mBAAmB,CAAC,KAAK,CAAC;IAC1BT,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMmB,gBAAgB,GAAI,gBAAehB,cAAc,GAAG,SAAS,GAAG,EAAG,EAAC;EAC1E,MAAMiB,iBAAiB,GAAI,gBACzBb,mBAAmB,GAAG,SAAS,GAAG,EACnC,EAAC;EAEF,oBACEtB,OAAA;IAAMoC,QAAQ,EAAEJ,iBAAkB;IAAAK,QAAA,gBAChCrC,OAAA;MAAKsC,SAAS,EAAEJ,gBAAiB;MAAAG,QAAA,gBAC/BrC,OAAA;QAAOuC,OAAO,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvC3C,OAAA;QACE4C,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,MAAM;QACTC,QAAQ,EAAErB,sBAAuB;QACjCrB,KAAK,EAAEC,WAAY;QACnB0C,MAAM,EAAElB;MAAqB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAELzB,cAAc,iBAAIlB,OAAA;MAAGsC,SAAS,EAAC,YAAY;MAAAD,QAAA,EAAC;IAAsB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAEvE3C,OAAA;MAAKsC,SAAS,EAAEH,iBAAkB;MAAAE,QAAA,gBAChCrC,OAAA;QAAOuC,OAAO,EAAC,OAAO;QAAAF,QAAA,EAAC;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzC3C,OAAA;QACE4C,IAAI,EAAC,OAAO;QACZC,EAAE,EAAC,OAAO;QACVC,QAAQ,EAAEhB,uBAAwB;QAClC1B,KAAK,EAAEQ,YAAa;QACpBmC,MAAM,EAAEhB;MAAgB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAELrB,mBAAmB,iBAClBtB,OAAA;MAAGsC,SAAS,EAAC,YAAY;MAAAD,QAAA,EAAC;IAAsB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACpD,eAED3C,OAAA;MAAKsC,SAAS,EAAC,cAAc;MAAAD,QAAA,eAC3BrC,OAAA;QACEgD,QAAQ,EAAE,CAACzB,WAAY;QACvB0B,OAAO,EAAEA,CAAA,KAAM;UACbC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;QACxB,CAAE;QAAAd,QAAA,EACH;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAACxC,EAAA,CArGIF,WAAW;EAAA,QAMXH,QAAQ;AAAA;AAAAsD,EAAA,GANRnD,WAAW;AAuGjB,eAAeA,WAAW;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}