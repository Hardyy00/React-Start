{"ast":null,"code":"var _jsxFileName = \"C:\\\\web_development\\\\React\\\\forms\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    valueIsValid: nameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    valueBlurHandler: nameBlurHandler,\n    reset: nameInputReset\n  } = useInput(name => name.trim() !== \"\"); /// passing the validating function for each input\n\n  const {\n    value: enteredEmail,\n    valueIsValid: emailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    valueBlurHandler: emailBlurHandler,\n    reset: emailInputReset\n  } = useInput(email => email.includes(\"@\"));\n  const formIsValid = nameIsValid && emailIsValid;\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    if (enteredName.trim() === \"\" || !enteredEmail.includes(\"@\")) return;\n    nameInputReset();\n    emailInputReset();\n  };\n  const nameInputClasses = `form-control ${nameInputHasError ? \"invalid\" : \"\"}`;\n  const emailInputClasses = `form-control ${emailInputHasError ? \"invalid\" : \"\"}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        value: enteredName,\n        onBlur: nameBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Name must not be empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailChangeHandler,\n        value: enteredEmail,\n        onBlur: emailBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Email must include '@'\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"mU9nlLPszRQVIyqv8BBLfkHqT90=\", false, function () {\n  return [useInput, useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","value","enteredName","valueIsValid","nameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangeHandler","valueBlurHandler","nameBlurHandler","reset","nameInputReset","name","trim","enteredEmail","emailIsValid","emailInputHasError","emailChangeHandler","emailBlurHandler","emailInputReset","email","includes","formIsValid","formSubmitHandler","event","preventDefault","nameInputClasses","emailInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["C:/web_development/React/forms/src/components/SimpleInput.js"],"sourcesContent":["import useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    valueIsValid: nameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    valueBlurHandler: nameBlurHandler,\n    reset: nameInputReset,\n  } = useInput((name) => name.trim() !== \"\"); /// passing the validating function for each input\n\n  const {\n    value: enteredEmail,\n    valueIsValid: emailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    valueBlurHandler: emailBlurHandler,\n    reset: emailInputReset,\n  } = useInput((email) => email.includes(\"@\"));\n\n  const formIsValid = nameIsValid && emailIsValid;\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n\n    if (enteredName.trim() === \"\" || !enteredEmail.includes(\"@\")) return;\n\n    nameInputReset();\n    emailInputReset();\n  };\n\n  const nameInputClasses = `form-control ${nameInputHasError ? \"invalid\" : \"\"}`;\n  const emailInputClasses = `form-control ${\n    emailInputHasError ? \"invalid\" : \"\"\n  }`;\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameChangeHandler}\n          value={enteredName}\n          onBlur={nameBlurHandler}\n        />\n      </div>\n\n      {nameInputHasError && (\n        <p className=\"error-text\">Name must not be empty</p>\n      )}\n\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">Your Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailChangeHandler}\n          value={enteredEmail}\n          onBlur={emailBlurHandler}\n        />\n      </div>\n\n      {emailInputHasError && (\n        <p className=\"error-text\">Email must include '@'</p>\n      )}\n\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}