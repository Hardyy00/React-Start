{"ast":null,"code":"var _jsxFileName = \"C:\\\\web_development\\\\React\\\\forms\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [nameFieldTouched, setNameFieldTouched] = useState(false);\n  const [emailFieldTouched, setEmailFieldTouched] = useState(false);\n  const [enteredEmailIsValid, setEnteredEmailIsValid] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const inputIsInvalid = !enteredNameIsValid && nameFieldTouched;\n  const formIsValid = enteredNameIsValid && enteredEmailIsValid;\n  const emailInputIsInvalid = !enteredEmailIsValid && emailFieldTouched;\n  if (nameFieldTouched === false && enteredName.trim() !== \"\") setNameFieldTouched(true);\n  if (emailFieldTouched === false && enteredEmail.trim() !== \"\") setEmailFieldTouched(true);\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const emailChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n    if (enteredEmailIsValid === false && event.target.value.trim() !== \"\") setEnteredEmailIsValid(true);\n  };\n  const nameInputBlurHandler = event => {\n    setNameFieldTouched(true);\n  };\n  const emailBlurHandler = event => {\n    setEmailFieldTouched(true);\n  };\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    setNameFieldTouched(true);\n    setEmailFieldTouched(true);\n    if (enteredName.trim() === \"\") return;\n    if (!enteredEmail.trim().includes(\"@\")) {\n      setEnteredEmailIsValid(false);\n      return;\n    }\n    setEnteredName(\"\");\n    setEnteredEmail(\"\");\n    setNameFieldTouched(false);\n    setEmailFieldTouched(false);\n  };\n  const nameInputClasses = `form-control ${inputIsInvalid ? \"invalid\" : \"\"}`;\n  const emailInputClasses = `form-control ${emailInputIsInvalid ? \"invalid\" : \"\"}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        value: enteredName,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), inputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Name must not be empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailChangeHandler,\n        value: enteredEmail,\n        onBlur: emailBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Email must include '@' character\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        onClick: () => {\n          console.log(\"clicked\");\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"yrDEmNT/+cJL9ewL13d2EY0TWSg=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","SimpleInput","props","_s","enteredName","setEnteredName","enteredEmail","setEnteredEmail","nameFieldTouched","setNameFieldTouched","emailFieldTouched","setEmailFieldTouched","enteredEmailIsValid","setEnteredEmailIsValid","enteredNameIsValid","trim","inputIsInvalid","formIsValid","emailInputIsInvalid","nameInputChangeHandler","event","target","value","emailChangeHandler","nameInputBlurHandler","emailBlurHandler","formSubmitHandler","preventDefault","includes","nameInputClasses","emailInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","onClick","console","log","_c","$RefreshReg$"],"sources":["C:/web_development/React/forms/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [nameFieldTouched, setNameFieldTouched] = useState(false);\n  const [emailFieldTouched, setEmailFieldTouched] = useState(false);\n  const [enteredEmailIsValid, setEnteredEmailIsValid] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const inputIsInvalid = !enteredNameIsValid && nameFieldTouched;\n  const formIsValid = enteredNameIsValid && enteredEmailIsValid;\n  const emailInputIsInvalid = !enteredEmailIsValid && emailFieldTouched;\n\n  if (nameFieldTouched === false && enteredName.trim() !== \"\")\n    setNameFieldTouched(true);\n  if (emailFieldTouched === false && enteredEmail.trim() !== \"\")\n    setEmailFieldTouched(true);\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n  const emailChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n\n    if (enteredEmailIsValid === false && event.target.value.trim() !== \"\")\n      setEnteredEmailIsValid(true);\n  };\n\n  const nameInputBlurHandler = (event) => {\n    setNameFieldTouched(true);\n  };\n\n  const emailBlurHandler = (event) => {\n    setEmailFieldTouched(true);\n  };\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    setNameFieldTouched(true);\n    setEmailFieldTouched(true);\n\n    if (enteredName.trim() === \"\") return;\n\n    if (!enteredEmail.trim().includes(\"@\")) {\n      setEnteredEmailIsValid(false);\n      return;\n    }\n\n    setEnteredName(\"\");\n    setEnteredEmail(\"\");\n    setNameFieldTouched(false);\n    setEmailFieldTouched(false);\n  };\n\n  const nameInputClasses = `form-control ${inputIsInvalid ? \"invalid\" : \"\"}`;\n  const emailInputClasses = `form-control ${\n    emailInputIsInvalid ? \"invalid\" : \"\"\n  }`;\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          value={enteredName}\n          onBlur={nameInputBlurHandler}\n        />\n      </div>\n\n      {inputIsInvalid && <p className=\"error-text\">Name must not be empty</p>}\n\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">Your email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailChangeHandler}\n          value={enteredEmail}\n          onBlur={emailBlurHandler}\n        />\n      </div>\n\n      {emailInputIsInvalid && (\n        <p className=\"error-text\">Email must include '@' character</p>\n      )}\n      <div className=\"form-actions\">\n        <button\n          disabled={!formIsValid}\n          onClick={() => {\n            console.log(\"clicked\");\n          }}\n        >\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}